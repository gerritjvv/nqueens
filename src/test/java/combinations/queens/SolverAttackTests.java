package combinations.queens;

import org.junit.Test;

import static org.junit.Assert.assertTrue;

/**
 * Basic sanity check for the {@link Solver#isOnAttackPath(int[], int)} method.<br/>
 * @TODO add more test cases, from data generated by a different solver.
 */
public class SolverAttackTests {

    private static final AttackTest[] attackTests = new AttackTest[]{

            new AttackTest(
                    0,
                    false,
                    new int[]{
                            0,
                            0, // point r=1, col=2, not on attack path
                            0,
                            0
                    }
            ),
            new AttackTest(
                    1,
                    true,
                    new int[]{
                            0,
                            1,
                            0,
                            0,
                    }
            ),
            new AttackTest(
                    1,
                    true,
                    new int[]{
                            3,
                            3,
                            3,
                            3,
                    }
            ),

            new AttackTest(
                    1,
                    false,
                    new int[]{
                            3,
                            1,
                            3,
                            3,
                    }
            ),
    };

    /**
     * Test if a queen is on an attack path
     */
    @Test
    public void testIsOnAttackPath() {
        for (AttackTest attackTest : attackTests) {
            assertTrue(attackTest.test());
            System.out.println();
        }
    }

    private static class AttackTest {
        int row;
        int[] coords;
        boolean onAttackPath;

        public AttackTest(int row, boolean onAttackPath, int[] coords) {
            this.row = row;
            this.coords = coords;
            this.onAttackPath = onAttackPath;
        }

        public boolean test() {
            return Solver.isOnAttackPath(coords, row) == onAttackPath;
        }
    }
}
